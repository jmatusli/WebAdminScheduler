@model WebAdminScheduler.Models.CP_PROCESOS;
@{
    ViewData["Title"] = "Dependencia";
}

<head>
    <link rel="stylesheet" href="~/css/datatables.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/3.3.4/css/bootstrap.min.css" /> 
    <link rel="stylesheet" href="~/lib/Toast/dist/jquery.toast.min.css" />
    <link rel="stylesheet" href="~/lib/SweetAlert/dist/sweetalert2.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap-multiselect.css" /> 
    <link rel="stylesheet" href="~/lib/Vis/dist/vis-network.min.css" rel="stylesheet" type="text/css"/>

    <script src="~/js/jquery-1.11.3.min.js"></script>
    <script src="~/js/pdfmake.min.js"></script>
    <script src="~/js/vfs_fonts.js"></script>
    <script src="~/js/datatables.min.js"></script>
    <script src="~/lib/SweetAlert/dist/sweetalert2.min.js"></script>
    <script src="~/lib/Toast/dist/jquery.toast.min.js"></script>
    <script src="~/lib/Vis/dist/vis.js"></script>
    <script src="~/lib/bootstrap/3.3.4/js/bootstrap.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap-multiselect.js"></script>
    
    <style type="text/css">
        body {
            font: 10pt sans;
        }

        #mynetwork {
            width: 800px;
            height: 800px;
            border: 1px solid lightgray;

             align:center;
        }
    </style>
</head>

<h1>Dependencia</h1>
    <body onload="draw();">
        <div class="card">
            <div class="card-header">
                Detalle
            </div>
            <div class="card-body">
                <div class="row g-4 align-items-center">
                    <div class="col-auto">
                        <label for="TittleProc" class="col-form-label"><strong>IDPROC:</strong></label>
                        <label for="txtIdProc" class="col-form-label">@Model.IDPROC</label>
                    </div>
                </div>
            </div>
            <div class="">
                <strong>Seleccionar dependencia:</strong>
                <select id="multiple-checkboxes" multiple="multiple">
                    <option value="php">PHP</option>
                    <option value="javascript">JavaScript</option>
                    <option value="java">Java</option>
                    <option value="sql">SQL</option>
                    <option value="jquery">Jquery</option>
                    <option value=".net">.Net</option>
                </select>
            </div>
        </div>

        <div class="container">
           <div id="mynetwork"></div>
        </div>
    </body>
     <script type="text/javascript">

     $(document).ready(function() {
        $('#multiple-checkboxes').multiselect({
          includeSelectAllOption: true,
        });
    });
        var nodes = null;
        var edges = null;
        var network = null;
        var directionInput = document.getElementById("direction");

        function destroy() {
            if (network !== null) {
                network.destroy();
                network = null;
            }
        }

        function draw() {
            destroy();
            nodes = [];
            edges = [];
            var connectionCount = [];

            // randomly create some nodes and edges
            for (var i = 0; i < 5; i++) {
                nodes.push({id: i, label: String(i)});
            }
            edges.push({from: 0, to: 1});
            edges.push({from: 0, to: 2});
            edges.push({from: 0, to: 3});
            edges.push({from: 0, to: 4});
            edges.push({from: 0, to: 5,arrows:{middle:{scaleFactor:1.6},to:true}});
    
            nodes[0]["level"] = 0;
            nodes[0]["shape"] = 'circle';
 
            nodes[1]["level"] = 1;
             nodes[1]["shape"] = 'circle';
            nodes[2]["level"] = 1;
             nodes[2]["shape"] = 'circle';
            nodes[3]["level"] = 1;
             nodes[3]["shape"] = 'circle';
            nodes[4]["level"] = 1;
             nodes[4]["shape"] = 'circle';
            
            // create a network
            var container = document.getElementById('mynetwork');
            var data = {
                nodes: nodes,
                edges: edges
            };
 
            var options = {
                nodes: {
                shape: 'dot',
                size: 30,
                font: {
                size: 32,
                color: '#000000'
            },
            borderWidth: 2
            }, 
                edges: {
                    smooth: {
                        type: 'cubicBezier',
                        forceDirection: 'horizontal',//(directionInput.value == "UD" || directionInput.value == "DU") ? 'vertical' : 'horizontal',
                        roundness: 0.4
                    }
                },
                layout: {
                    hierarchical: {
                        direction: 'UD'//directionInput.value
                    }
                },
                physics:false,
                interaction: {
                    dragNodes: false,// do not allow dragging nodes
                    zoomView: false, // do not allow zooming
                    dragView: true  // do not allow dragging
                }
            };
            network = new vis.Network(container, data, options);

            // add event listeners
            network.on('select', function (params) {
                /*document.getElementById('selection').innerHTML = */
                console.log('Selection: ' + params.nodes);
            });

            network.on('dragStart', function(){
                return false;
            });
    }
</script>

<script> 
    var params={};
    var table={};

    var idproc="@Model.IDPROC";
    params.idproc=idproc;

    var idDependencia = "@Model.DEPENDENCIA";
    var idflexFtp = "@Model.FTP";
    var idComprens = "@Model.COMPRESION";
    
    function recargartabla(objeto,value)
    {
        params.idproc=value;
        objeto.ajax.reload(null,false); //reload datatable ajax 
    }

    if (idDependencia == 1) {
        $("#TxtIdDependencia").prop('checked', true);
    } else {
        $("#TxtIdDependencia").prop('checked', false);
    }

    if (idflexFtp == 1) {
        $("#flexCheckFtp").prop('checked', true);
    } else {
        $("#flexCheckFtp").prop('checked', false);
    }

    if (idComprens = 1) {
        $("#CheckComprensComprension").prop('checked', true);
    } else {
        $("#CheckComprension").prop('checked', false);
    }

    function toggle(source) {
        checkboxes = document.getElementsByName('dinamico');

        for(var i=0, n=checkboxes.length;i<n;i++) {
            checkboxes[i].checked = source.checked;
        }
    }
</script>