@{
    ViewData["Title"] = "Edit";
}

<div>
  <a asp-action="Index" class="btn btn-primary">Inicio</a>
</div>
<div class="card">
  <div class="card-header">
    <a href="#" class="btn btn-primary">Guardar</a>
  </div>
  <div class="card-body">
    <div class="row g-4 align-items-center">
      <div class="col-auto">
        <label for="TittleProc" class="col-form-label">IDPROC</label>
      </div>
      <div class="col-auto">
        <label for="txtIdProc" class="col-form-label">01</label>
      </div>
      <div class="col-auto">
        <label for="TittleConex" class="col-form-label">IDCONEX</label>
      </div>
      <div class="col-auto">
        <input type="number" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true">
      </div>
      <div class="col-auto">
        <label for="TittleNombre" class="col-form-label">NOMBRE</label>
      </div>
      <div class="col-auto">
        <input type="text" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true">
      </div>
    </div>

    <br/>
    <div class="row g-4 align-items-center">
      <div class="col-auto">
        <label for="TittleDescrpcion" class="col-form-label">DESCRIPCIÓN</label>
      </div>
      <div class="col-auto">
        <input type="text" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true">
      </div>
      <div class="col-auto">
        <label for="TittlePath" class="col-form-label">PATH</label>
      </div>
      <div class="col-auto">
        <input type="text" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true">
      </div>
      <div class="col-auto">
        <label for="TittleParametro1" class="col-form-label">PARAMETRO1</label>
      </div>
      <div class="col-auto">
        <input type="text" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true">
      </div>
      <div class="col-auto">
        <label for="TittleParametroDos" class="col-form-label">PARAMETRO2</label>
      </div>
      <div class="col-auto">
        <input type="text" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true">
      </div>
      <div class="col-auto">
        <label for="TittleParametroTres" class="col-form-label">PARAMETRO3</label>
      </div>
      <div class="col-auto">
        <input type="text" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true">
      </div>
      <div class="col-auto">
        <label for="TittleParametroCuatro" class="col-form-label">PARAMETRO4</label>
      </div>
      <div class="col-auto">
        <input type="text" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true">
      </div>
      <div class="col-auto">
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="" id="IdDependencia">
            <label class="form-check-label" for="IdDependencia">
              DEPENDENCIA
            </label>
        </div>
      </div>
      <div class="col-auto">
        <span id="RepeatIntentos" class="form-text">
          INTENTOS
        </span>
    </div>
    <div class="col-auto">
      <input type="number" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true">
    </div>
    <div class="col-auto">
      <span id="RepeatEsperaIntento" class="form-text">
        ESPERA INTENTO
      </span>
    </div>
    <div class="col-auto">
      <input type="number" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true">
    </div>
    <div class="col-auto">
      <span id="RepeatEstado" class="form-text">
        ESTADO
      </span>
    </div>
      <div class="col-auto">
        <select class="form-select" name="estado" id="estado">
          <option value="act">ACTIVO</option>
          <option value="inact">INACTIVO</option>
          <option value="int">INTERNAL</option>
        </select>
      </div>
      <div class="col-auto">
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="" id="flexCheckFtp">
          <label class="form-check-label" for="flexCheckFtp">
            FTP
          </label>
        </div>
      </div>
      <div class="col-auto">
        <span id="idHost" class="form-text">
          IDHOST
        </span>
      </div>
      <div class="col-auto">
        <input type="number" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true">
      </div>
      <div class="col-auto">
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="" id="flexCheckComprension">
          <label class="form-check-label" for="flexCheckComprension">
            COMPRESION
          </label>
        </div>
      </div>
      <div class="col-auto">
        <span id="Node" class="form-text">
          NODE
        </span>
      </div>
      <div class="col-auto">
        <input type="number" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true">
      </div>
    </div>
  </div>
  <div class="card-footer text-muted">
    <h4 style="text-align: center;">Crear Crontab</h4>
  </div>
</div>

<div class="container">
            <table id="dt-crontabs" class="display nowrap" width="100%">
                <thead>
                <tr>
                    <th><input type="checkbox" name="select_all" class="dt-column-title" value="1" id="tblJobs-select-all"></th>
                    <th>IDPROC</th>
                    <th>IDCONEX</th>
                    <th>NOMBRE</th>
                    <th>DESCRIPCIÓN</th>
                    <th>PATH</th>  
                    <th>PARAMETRO1</th>
                    <th>PARAMETRO2</th>
                    <th>PARAMETRO3</th>
                    <th>PARAMETRO4</th>
                    <th>DEPENDENCIA</th>
                    <th>INTENTOS</th>
                    <th>ESPERA INTENTO</th>
                    <th>ESTADO</th>
                    <th>FTP</th>
                    <th>IDHOST</th>
                    <th>COMPRESIÓN</th>
                    <th>IDCRONTAB</th>
                    <th>NODE</th>
                </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
		
		
 <script> 
var params={};
 var table={};
 var idjob="";
 params.idcrontab=idcrontab;

 

    $(document).on("ready",function() {

          table = $('#dt-crontabs').DataTable( {
            "processing": true,
            "serverSide": true,
            "filter": true,
            "scrollX":          true,
            "sScrollX":         "50%",
            "scrollY":            $(document).height() - 300,
            "scrollCollapse":     true,
            "ajax": {
                "url": "@Url.Action("ListarCrontabsAsoc","Jobs")",
                "type": "GET",
                "datatype": "json",
                "data": function(d){
                $.extend( d, params);    
                },
        },
            "columnDefs": [{
            'targets': 0,
            orderable: false,
            'render': function (data, type, full, meta){
                return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';
            }
            }],
            "columns": [
            {
                "render": function (data,row) { return '<input type="checkbox" name="select_all" class="dt-column-title" value="1" id="dt-crontabs-select-all">';   }
            },
                { "data": "idproc", "name": "idproc", "autoWidth": true },
                { "data": "idconex", "name": "idconex", "autoWidth": true },
                { "data": "nombre", "name": "nombre", "autoWidth": true },
                { "data": "descripcion", "name": "descripcion", "autoWidth": true },
                { "data": "path", "name": "path", "autoWidth": true },
                { "data": "parametrO1", "name": "parametrO1", "autoWidth": true },
                { "data": "parametrO2", "name": "parametrO2", "autoWidth": true },
                { "data": "parametrO3", "name": "parametrO3", "autoWidth": true },
                { "data": "parametrO4", "name": "parametrO4", "autoWidth": true },
                { "data": "dependencia", "name": "dependencia", "autoWidth": true },
                { "data": "intentos", "name": "intentos", "autoWidth": true },
                { "data": "esperA_INTENTO", "name": "esperA_INTENTO", "autoWidth": true },
                { "data": "estado", "name": "estado", "autoWidth": true },
                { "data": "ftp", "name": "ftp", "autoWidth": true },
                { "data": "idhost", "name": "idhost", "autoWidth": true },
                { "data": "compresion", "name": "compresion", "autoWidth": true },
                { "data": "idcrontab", "name": "idcrontab", "autoWidth": true },
                { "data": "node", "name": "node", "autoWidth": true },
            ],
            
            select: {
            style:    'os',   //default but you have to specify it, no idea why
            selector: 'tr,a:not(.btn)'
            },
            "language": {
            "url": "/lib/datatables/dist/locales/es/es.json"
            }
        });
 
        table.on('select', function (e, dt, type, indexes) {
        console.log(e.target);
        if (type === 'row'   ) {
            var nodes = table
            .rows(indexes)
            .nodes()
            .each(function () { 
            $('td:first-child', this).find('input').prop('checked', true); 
            });
        }
        });

        table.on('deselect', function (e, dt, type, indexes) {
        if (type === 'row') {
        $('#dt-crontabs-select-all').prop("checked",false);
            table
            .rows(indexes)
            .nodes()
            .each(function () { 
            $('td:first-child', this).find('input').prop('checked', false); 
            });
        }
        });
        
        // Handle click on "Select all" control
        $('#dt-crontabs-select-all').on('click', function() {
          
        console.log("esta selecconado: ",$(this).is(":checked")," otra forma ",this.checked )
        // Get all rows with search applied
          var rows = table.rows({ 'search': 'applied' }).nodes();
          // Check/uncheck checkboxes for all rows in the table
        if(this.checked){
          $('input[type="checkbox"]', rows).prop('checked', this.checked);
          
          var selData =   table.rows().select();
          var selData =   table.rows(".selected").data();
        }
        else 
        {
            var selData =   table.rows().deselect();
        }
      });

        // Handle click on checkbox to set state of "Select all" control
        $('#dt-crontabs tbody').on('change', 'input[type="checkbox"]', function(){
            // If checkbox is not checked
            if(!this.checked){
            var el = $('#dt-crontabs-select-all').get(0);
            // If "Select all" control is checked and has 'indeterminate' property
            if(el && el.checked && ('indeterminate' in el)){
                // Set visual state of "Select all" control
                // as 'indeterminate'
                el.indeterminate = true;
            }
            }
        });
        
        table.on('select', function (e, dt, type, indexes) {
            console.log(e.target);
            if (type === 'row'   ) {
                var nodes = table
                .rows(indexes)
                .nodes()
                .each(function () { 
                $('td:first-child', this).find('input').prop('checked', true); 
                });
                //.find(':checkbox', 'td:first-child').checked = true; 
            }
            });

        table.on('deselect', function (e, dt, type, indexes) {
        if (type === 'row') {
        $('#dt-crontabs-select-all').prop("checked",false);
            table
            .rows(indexes)
            .nodes()
            .each(function () { 
            $('td:first-child', this).find('input').prop('checked', false); 
            });
        }
        });
        
        // Handle click on "Select all" control
        $('#dt-crontabs-select-all').on('click', function(){
            
        console.log("esta selecconado: ",$(this).is(":checked")," otra forma ",this.checked )
        // Get all rows with search applied
            var rows = table.rows({ 'search': 'applied' }).nodes();
            // Check/uncheck checkboxes for all rows in the table
        if(this.checked){
            $('input[type="checkbox"]', rows).prop('checked', this.checked);
            
            var selData =   table.rows().select();
            var selData =   table.rows(".selected").data();
        }
        else 
        {
        var selData =   table.rows().deselect();
        }
        });

        // Handle click on checkbox to set state of "Select all" control
        $('#dt-crontabs tbody').on('change', 'input[type="checkbox"]', function(){
        // If checkbox is not checked
        if(!this.checked){
          var el = $('#dt-crontabs-select-all').get(0);
          // If "Select all" control is checked and has 'indeterminate' property
          if(el && el.checked && ('indeterminate' in el)){
          // Set visual state of "Select all" control
          // as 'indeterminate'
          el.indeterminate = true;
        }
      }
    });
   // recargartabla(table,idcrontab);


 

$("#updhoraIni option[value='"+String(horainicio).padStart(2, '0')+"']").attr('selected', true);
 $("#uptminutoIni option[value='"+String(minutoinicio).padStart(2, '0')+"']").attr('selected', true);
     
 

       
$("#upthoraFin option[value='"+String(horafin).padStart(2, '0')+"']").attr('selected', true);
 $("#uptminutoFin option[value='"+String(minutofin).padStart(2, '0')+"']").attr('selected', true);
    })
 
   
</script>		