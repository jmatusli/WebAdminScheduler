<!DOCTYPE html>
<html>

  <head>
    <link rel="stylesheet" href="~/css/datatables.min.css" />
    <script src="~/js/jquery-1.11.3.min.js"></script>
    <script src="~/js/pdfmake.min.js"></script>
    <script src="~/js/vfs_fonts.js"></script>
    <script src="~/js/datatables.min.js"></script>
  </head>

  <body>
    <h1>Jobs</h1>
    <div class="row g-4 align-items-center">
      <div class="col-auto">
        <p>
          <a asp-action="Create" class="btn btn-primary">Nuevo</a>
        </p>
      </div>
      <div class="col-auto">
        <span id="RepeatEstado" class="form-text">
          ESTADO
        </span>
      </div>
      <div class="col-auto">
        <select class="form-select" name="slcEstado" id="slcEstado">
          <option value="Activo">ACTIVO</option>
          <option value="Inactivo">INACTIVO</option>
          <option value="Internal">INTERNAL</option>
        </select>
      </div>
    </div>
    <div class="container">
      <table id="tblJobs" class="display nowrap" width="100%">
        <thead>
          <tr style="font-size:13px;">
            <th><input type="checkbox" name="select_all" class="dt-column-title" value="1" id="tbljobs-select-all"></th>
            <th>IDPROC</th>
            <th>CONEX</th>
            <th>NOMBRE</th>
            <th>DESCRIPCIÃ“N</th>
            <th>ACCIONES</th>
          </tr>
        </thead>
        <tbody>
        </tbody>
      </table>
    </div>
  </body>

<script>
  var params={};

  function recargartabla(objeto,value)
  {
    params.start=0;
    params.estado=value;
    objeto.ajax.reload(null,false); //reload datatable ajax 
  }
  
  $(document).ready( function () {
    var table = $('#tblJobs').DataTable( {
      "processing": true,
      "serverSide": true,
      "filter": true,
      "scrollX":          true,
        "sScrollX":         "50%",
        "scrollY":            '230px',
        "scrollCollapse":     true,
        "ajax": {
          "url": "@Url.Action("ListarProcesos","Jobs")",
          "type": "POST",
          "datatype": "json",
          "data": function(d){
          $.extend( d, params);    
        }
        }
		, 
    "columnDefs": [{
      'targets': 0,
      orderable: false
    },{
      'targets': -1,
      orderable: false,
      'render': function (data, type, full, meta){
        return   '<a class="btn btn-success btn-sm" asp-route-idProc="'+data.idproc+'" href="/Jobs/Edit/'+data.idproc+'">Editar</a>&nbsp;<a id="btnDetail" class="btn btn-info btn-sm" asp-route-idProc="'+data.idproc+'" href="/Jobs/Detalle/'+data.idproc+'">Detalle</a>';
      }
    }],
    "columns": [
      {
        "render": function (data,row) { return '<input type="checkbox" name="select_all" class="dt-column-title" value="1" id="tbljobs-select-all-item">'; }
      },
        { "data": "idproc", "name": "idproc", "autoWidth": true },
        { "data": "usuario", "name": "usuario", "autoWidth": true },
        { "data": "nombre", "name": "nombre", "autoWidth": true },
        { "data": "descripcion", "name": "descripcion", "autoWidth": true },
        { "data":null },
    ],
    select: {
    style: 'single',
    selector: 'td:not(:last-child)' // no row selection on last column
    },
      "language": {
      "url": "/lib/datatables/dist/locales/es/es.json"
      }
    });

    table.on('select', function (e, dt, type, indexes) {
      if (type === 'row'   ) {
        var nodes = table
        .rows(indexes)
        .nodes()
        .each(function () { 
          $('td:first-child', this).find('input').prop('checked', true); 
        });
        //.find(':checkbox', 'td:first-child').checked = true; 
      }
    });

    table.on('deselect', function (e, dt, type, indexes) {
      if (type === 'row') {
      $('#tbljobs-select-all').prop("checked",false);
        table
        .rows(indexes)
        .nodes()
        .each(function () { 
          $('td:first-child', this).find('input').prop('checked', false); 
        });
      }
    });
      
    // Handle click on "Select all" control
    $('#tbljobs-select-all').on('click', function(){
      
      if(table.settings()[0]._select.style=='multi')
      {   
      // Get all rows with search applied
        var rows = table.rows({ 'search': 'applied' }).nodes();
        // Check/uncheck checkboxes for all rows in the table
      if(this.checked){
        $('input[type="checkbox"]', rows).prop('checked', this.checked);
        
        var selData =   table.rows().select();
        var selData =   table.rows(".selected").data();
      }
      else 
      {
        var selData =   table.rows().deselect();
      }
    }
    else 
    return false;
  });

    // Handle click on checkbox to set state of "Select all" control
    $('#tblJobs tbody').on('change', 'input[type="checkbox"]', function(){
      // If checkbox is not checked
      if(!this.checked){
        var el = $('#tbljobs-select-all').get(0);
        // If "Select all" control is checked and has 'indeterminate' property
        if(el && el.checked && ('indeterminate' in el)){
        // Set visual state of "Select all" control
        // as 'indeterminate'
        el.indeterminate = true;
      }
    }
  });

  $("#slcEstado").on("change",function(){

recargartabla(table,$(this).val())

  })
});
</script> 
</html>