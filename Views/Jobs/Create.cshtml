@model WebAdminScheduler.Models.CP_CRONTAB;
@{  
  ViewData["Title"] = "Crear";  
}
<head>
  <link rel="stylesheet" href="~/css/datatables.min.css" />
  <link rel="stylesheet" href="~/lib/Toast/dist/jquery.toast.min.css" />
  <link rel="stylesheet" href="~/lib/SweetAlert/dist/sweetalert2.min.css" />
  <script src="~/js/jquery-1.11.3.min.js"></script>
  <script src="~/js/pdfmake.min.js"></script>
  <script src="~/js/vfs_fonts.js"></script>
  <script src="~/js/datatables.min.js"></script>
  <script src="~/lib/SweetAlert/dist/sweetalert2.min.js"></script>
  <script src="~/lib/Toast/dist/jquery.toast.min.js"></script>
</head>
    
<h1>@ViewData["Title"]Jobs</h1>
<div class="card">
  <div class="card-header">
    <a  id="saveJob" class="btn btn-primary">Guardar</a>
  </div>
  <div class="card-body">
    <div class="row g-4 align-items-center">
      <div class="col-auto">
        <label for="TittleConex" class="col-form-label">IDCONEX</label>
      </div>
      <div class="col-auto">
        <input type="number" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true" id="txtIdConex" name="txtIdConex">
      </div>
    </div>
    <br />

    <div class="container">
      <div class="row">
        <div class="col-auto">
          <label for="TittleNombre" class="col-form-label">NOMBRE</label>
        </div>
        <div class="col-6">
          <input type="text" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true" id="txtNombre" name="txtNombre">
        </div>
      </div>
    </div>
    <br />

    <div class="container">
      <div class="row">
        <div class="col-auto">
          <label for="TittleDescrpcion" class="col-form-label">DESCRIPCIÓN</label>
        </div>
        <div class="col-6">
          <input type="text" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true" id="txtDescripcion" name="txtDescripcion">
        </div>
      </div>
    </div>
    <br />

    <div class="container">
      <div class="row">
        <div class="col-auto">
          <label for="TittlePath" class="col-form-label">PATH</label>
        </div>
        <div class="col-6">
          <input type="text" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true" id="txtPath" name="txtPath">
        </div>
      </div>
    </div>
    <br />
    
    <div class="container">
      <div class="row">
        <div class="col-auto">
          <label for="TittleParametro1" class="col-form-label">PARAMETRO1</label>
        </div>
        <div class="col-6">
          <input type="text" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true" id="txtParametro1" name="txtParametro1">
        </div>
      </div>
    </div>
    <br />

    <div class="container">
      <div class="row">
        <div class="col-auto">
          <label for="TittleParametroDos" class="col-form-label">PARAMETRO2</label>
        </div>
        <div class="col-6">
          <input type="text" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true" id="txtParametro2" name="txtParametro2">
        </div>
      </div>
    </div>
    <br />

    <div class="container">
      <div class="row">
        <div class="col-auto">
          <label for="TittleParametroTres" class="col-form-label">PARAMETRO3</label>
        </div>
        <div class="col-6">
          <input type="text" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true" id="txtParametro3" name="txtParametro3">
        </div>
      </div>
    </div>
    <br />

    <div class="container">
      <div class="row">
        <div class="col-auto">
          <label for="TittleParametroCuatro" class="col-form-label">PARAMETRO4</label>
        </div>
        <div class="col-6">
          <input type="text" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true" id="txtParametro4" name="txtParametro4">
        </div>
      </div>
    </div>
    <br />

    <div class="row g-4 align-items-center">
      <div class="col-auto">
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="" id="txtDependencia" name="txtDependencia">
          <label class="form-check-label" for="lblDependencia">
            DEPENDENCIA
          </label>
        </div>
      </div>
      <div class="col-auto">
        <label class="form-check-label" for="lblIntentos">
          INTENTOS
        </label>
      </div>
      <div class="col-auto">
        <input type="number" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true" id="txtIntentos" name="txtIntentos">
      </div>
      <div class="col-auto">
        <label class="form-check-label" for="lblEsperaIntento">
          ESPERA INTENTO
        </label>
      </div>
      <div class="col-auto">
        <input type="number" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true" id="txtEsperaIntento" name="txtEsperaIntento">
      </div>
      <div class="col-auto">
        <label class="form-check-label" for="RepeatEstado">
          ESTADO
        </label>
      </div>
      <div class="col-auto">
        <select class="form-select" name="txtEstado" id="txtEstado">
          <option value="Activo">ACTIVO</option>
          <option value="Inactivo">INACTIVO</option>
          <option value="Internal">INTERNAL</option>
        </select>
      </div>
    </div>
    <br />

    <div class="row g-4 align-items-center">
      <div class="col-auto">
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="" id="flexCheckFtp">
          <label class="form-check-label" for="flexCheckFtp">
            FTP
          </label>
        </div>
      </div>
      <div class="col-auto">
        <label class="form-check-label" for="idHost">
          IDHOST
        </label>
      </div>
      <div class="col-auto">
        <input type="number" min="1" class="form-control clockpicker" data-placement="right" data-align="top" data-autoclose="true" id="txtIdHost" name="txtIdHost">
      </div>
      <div class="col-auto">
        <div class="form-check">
          <input class="form-check-input" type="checkbox" value="" id="flexCheckComprension">
          <label class="form-check-label" for="flexCheckComprension">
            COMPRESIÓN
          </label>
        </div>
      </div>
      <div class="col-auto">
        <label class="form-check-label" for="Node">
          NODE
        </label>
      </div>
      <div class="col-auto">
        <input type="text" maxlength="10" class="form-control" data-placement="right" data-align="top" data-autoclose="true" id="txtNode" name="txtNode">
      </div>
    </div>
  </div>
  <div class="card-footer text-muted">
    <h4 style="text-align: center;">Registrar Crontab</h4>
  </div>
</div>

<div class="container">
  <table id="dt-crontab" class="display nowrap" width="100%">
    <thead>
      <tr style="font-size:13px;">
        <th><input type="checkbox" name="select_all" class="dt-column-title" value="1" id="dt-crontab-select-all-th"></th>
        <th>IDCRONTAB</th>
        <th>HORA INICIO</th>
        <th>HORA FIN</th>
        <th>DAYS</th>
        <th>DAY EXE</th>
        <th>MONTHS</th>
        <th>REPEAT EVERY MINS</th>
        <th>REPEAT AFTER FINISH</th>
      </tr>
    </thead>
    <tbody>
    </tbody>
  </table>
</div>

<script>

  var params={}, selectedCrontab = 0;

  function recargartabla(objeto,value)
  {
    params.estado=value;
    objeto.ajax.reload(null,false); //reload datatable ajax 
  }

  $(document).ready( function () {

    var table = $('#dt-crontab').DataTable( {
      "processing": true,
      "serverSide": true,
      "paging": true,
	    "deferLoading": 0, // here
      "scrollX":          true,
      "sScrollX":         "50%",
      "scrollY":            $(document).height() - 300,
      "scrollCollapse":     true,
      "ajax": {
        "url": "@Url.Action("ListarCrontabs","Calendario")",
        "type": "POST",
        "datatype": "json",
		    "data": function(d){
          $.extend( d, params);    
        }
      },
      drawCallback: function(settings){ 
        if($(this).find('tbody tr').length <= 1){
        $('.dt-paging-button').hide();
      }
    },
      "columnDefs": [{
        'targets': 0,
      orderable: false 
          
      },{
      'targets': -1,
      orderable: false,
        'render': function (data, type, full, meta) {
          return   '';
        }
      }],
      "columns": [
        {
          "render": function (data,row) { return '<input type="radio" name="select_all" class="dt-column-title" value="1" id="dt-crontab-select-item">';   }
        },
        { "data": "idcrontab", "name": "idcrontab", "autoWidth": true },
          { "data": "horA_INICIO", "name": "horA_INICIO", "autoWidth": true },
          { "data": "horA_FIN", "name": "horA_FIN", "autoWidth": true },
          { "data": "wdaY_M2S_EX", "name": "wdaY_M2S_EX", "autoWidth": true },
          { "data": "daY_EX", "name": "daY_EX", "autoWidth": true },
          { "data": "montH_EX", "name": "montH_EX", "autoWidth": true },
          { "data": "repeaT_EVERY_MINS", "name": "repeaT_EVERY_MINS", "autoWidth": true },
          { "data": "repeaT_AFTER_FINISH", "name": "repeaT_AFTER_FINISH", "autoWidth": true },
      ],
    
    select: {
    style: 'single',
    selector: 'td:not(:last-child)' // no row selection on last column
    },
      "language": {
      "url": "/lib/datatables/dist/locales/es/es.json"
      }
    });

    table.on('select', function (e, dt, type, indexes) {
    
      if (type === 'row'   ) {
        var nodes = table
        .rows(indexes)
        .nodes()
        .each(function () { 
          $('td:first-child', this).find('input').prop('checked', true);
        });
        selectedCrontab=table.rows( { selected: true }).data()[0].idcrontab;
        console.log("selectedCrontab ", selectedCrontab)
      }
    });

    table.on('deselect', function (e, dt, type, indexes) {
      if (type === 'row') {
      $('#dt-crontab-select-all').prop("checked",false);
        table
        .rows(indexes)
        .nodes()
        .each(function () { 
          $('td:first-child', this).find('input').prop('checked', false); 
        });
      }
    });
    
    // Handle click on "Select all" control
    $('#dt-crontab-select-all-th').on('click', function() {
      if(table.settings()[0]._select.style=='multi')
      { 
      // Get all rows with search applied
      var rows = table.rows({ 'search': 'applied' }).nodes();
      // Check/uncheck checkboxes for all rows in the table
      if(this.checked) {
        $('input[type="checkbox"]', rows).prop('checked', this.checked);
        var selData =   table.rows().select();
        var selData =   table.rows(".selected").data();
      }
      else 
      {
        var selData =   table.rows().deselect();
      }

      }
      else 
      return false;
    });

    // Handle click on checkbox to set state of "Select all" control
    $('#dt-crontab tbody').on('change', 'input[type="checkbox"]', function() {
      // If checkbox is not checked
      if(!this.checked) {
        var el = $('#dt-crontab-select').get(0);
        // If "Select all" control is checked and has 'indeterminate' property
        if(el && el.checked && ('indeterminate' in el)) {
          // Set visual state of "Select all" control
          // as 'indeterminate'
          el.indeterminate = true;
        }
      }
    });

    $("#saveJob").on("click",function() {
      var id_conex = $('#txtIdConex').val();
      var nombre = $('#txtNombre').val();
      var descripcion = $('#txtDescripcion').val();
      var path = $('#txtPath').val();
      var parametro1 = $('#txtParametro1').val();
      var parametro2 = $('#txtParametro2').val();
      var parametro3 = $('#txtParametro3').val();
      var parametro4 = $('#txtParametro4').val();
      var dependencia = $('#txtDependencia').is(":checked")?1:0;
      var intentos = $('#txtIntentos').val();
      var espera_intento = $('#txtEsperaIntento').val();
      var estado = $('#txtEstado').val();
      var ftp = $('#flexCheckFtp').is(":checked")?1:0;
      var id_host = $('#txtIdHost').val();
      var compresion = $('#flexCheckComprension').is(":checked")?1:0;  
      
      var node = $('#txtNode').val();

      var data_job = {
        "oProcesos" : {
          "IDCONEX" : id_conex,
          "NOMBRE" : nombre,
          "DESCRIPCION" : descripcion,
          "PATH" : path,
          "PARAMETRO1" : parametro1,
          "PARAMETRO2" : parametro2,
          "PARAMETRO3" : parametro3,
          "PARAMETRO4" : parametro4,
          "DEPENDENCIA" : dependencia,
          "INTENTOS" : intentos,
          "ESPERA_INTENTO" : espera_intento,
          "ESTADO" : "Activo",
          "FTP" : ftp,
          "IDHOST" : id_host,
          "COMPRESION" : compresion,
          "IDCRONTAB" : selectedCrontab,
          "NODE" : node
        }
      };
    
    if ((id_conex == "") || (id_host == "")) {  //COMPRUEBA CAMPOS VACIOS
      Swal.fire ('Los campos no pueden quedar vacios', 'error')
      return false;
    } else {
      console.log("datajob ",data_job);
      $.ajax({
        method: "POST",
        async: true,
        dataType: "json",
        data: JSON.stringify(data_job),
        contentType: "application/json; charset=utf-8",
        url: '@Url.Action("Save", "Jobs")' ,
        success: function () {
          Swal.fire({
          title: "Job registrado!",
          text: "Click en aceptar para ver jobs registrados!",
          icon: "success",
          confirmButtonText: "Aceptar",
        }).then((result) => {
          if (result.isConfirmed) {
            $(location).attr("href","@Url.Action("Index","Jobs")")
          }  
        });
      },
      error: function () {
        alert("Error while inserting data");
      }
    });
  }// Fin else
})      
});
</script> 